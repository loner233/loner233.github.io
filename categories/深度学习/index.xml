<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>深度学习 on Castle of Glass</title>
    <link>http://loner233.github.io/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/</link>
    <description>Recent content in 深度学习 on Castle of Glass</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 11 Oct 2020 16:34:36 +0800</lastBuildDate><atom:link href="http://loner233.github.io/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>tf（旧）中的变量管理</title>
      <link>http://loner233.github.io/post/tf%E6%97%A7%E4%B8%AD%E7%9A%84%E5%8F%98%E9%87%8F%E7%AE%A1%E7%90%86/</link>
      <pubDate>Sun, 11 Oct 2020 16:34:36 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/tf%E6%97%A7%E4%B8%AD%E7%9A%84%E5%8F%98%E9%87%8F%E7%AE%A1%E7%90%86/</guid>
      <description>&lt;p&gt;长时间没用Tensorflow，最近使用时对里面的变量作用域感觉一脸蒙蔽，特此来复习一下。主要就是&lt;code&gt;tf.variable_scope()&lt;/code&gt;
变量作用域的两个核心方法:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tf中的GradientTape</title>
      <link>http://loner233.github.io/post/tf%E4%B8%AD%E7%9A%84gradienttape/</link>
      <pubDate>Sun, 11 Oct 2020 16:29:24 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/tf%E4%B8%AD%E7%9A%84gradienttape/</guid>
      <description>&lt;p&gt;OP如果在上下文管理器中被执行的话，它就会被记录下来，至少输入inputs中的一个会被监听（watched）&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tf中的low Level Api</title>
      <link>http://loner233.github.io/post/tf%E4%B8%AD%E7%9A%84low-level-api/</link>
      <pubDate>Sun, 11 Oct 2020 16:21:02 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/tf%E4%B8%AD%E7%9A%84low-level-api/</guid>
      <description>&lt;p&gt;最近用了几次tensorflow的高阶api，发现构建自己的算法的时候还是有很大的局限性，再用回低阶api的时候发现自己蠢哭了，竟然不会写了，乘此机会复习复习，顺便看看新的特性。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tf.keras中Custom层</title>
      <link>http://loner233.github.io/post/tf.keras%E4%B8%ADcustom%E5%B1%82/</link>
      <pubDate>Sun, 11 Oct 2020 16:17:20 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/tf.keras%E4%B8%ADcustom%E5%B1%82/</guid>
      <description>&lt;p&gt;正常情况下使用tf的层&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;tensorflow&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;tf&lt;/span&gt;                                                             
&lt;span class=&#34;n&#34;&gt;tf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;keras&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;layers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Dense&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;input_shape&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;                                      
&lt;span class=&#34;n&#34;&gt;layer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;zeros&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]))&lt;/span&gt;                                                             
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>tf中的Dataset</title>
      <link>http://loner233.github.io/post/tf%E4%B8%AD%E7%9A%84dataset/</link>
      <pubDate>Sun, 11 Oct 2020 16:04:54 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/tf%E4%B8%AD%E7%9A%84dataset/</guid>
      <description>&lt;p&gt;Dataset api是TensorFlow 1.3引入的一个新的模块，主要用于数据的读取，构建输入数据的pipline&lt;br&gt;
此前，只能通过两种方法读取数据&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用Placeholder读内存中的数据&lt;/li&gt;
&lt;li&gt;使用queue读硬盘中的数据&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>tf中的Example和TFRecord</title>
      <link>http://loner233.github.io/post/tf%E4%B8%AD%E7%9A%84example%E5%92%8Ctfrecord/</link>
      <pubDate>Sun, 11 Oct 2020 15:54:24 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/tf%E4%B8%AD%E7%9A%84example%E5%92%8Ctfrecord/</guid>
      <description>&lt;h2 id=&#34;tfexample&#34;&gt;&lt;code&gt;tf.Example&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;实际上&lt;code&gt;tf.Example&lt;/code&gt;就是一个&lt;code&gt;{&amp;quot;string&amp;quot;:tf.train.Feature}&lt;/code&gt;的映射&lt;br&gt;
&lt;code&gt;tf.train.Feature&lt;/code&gt;消息类型可以接受以下三种类型中的一中&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tf.py_function</title>
      <link>http://loner233.github.io/post/tf.py_function/</link>
      <pubDate>Sun, 11 Oct 2020 15:51:50 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/tf.py_function/</guid>
      <description>&lt;p&gt;这个方法允许用python方法来在TensorFlow图中表示计算，即：&lt;br&gt;
&lt;strong&gt;将python方法转换成tensorflow的op&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Keras保存模型</title>
      <link>http://loner233.github.io/post/keras%E4%BF%9D%E5%AD%98%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Sun, 11 Oct 2020 15:50:27 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/keras%E4%BF%9D%E5%AD%98%E6%A8%A1%E5%9E%8B/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Batch Normalization</title>
      <link>http://loner233.github.io/post/batch-normalization/</link>
      <pubDate>Sun, 11 Oct 2020 15:48:08 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/batch-normalization/</guid>
      <description>&lt;p&gt;不涉及到基本原理,基本原理OneNote笔记，正在整理上传中&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Keras使用tensorboard</title>
      <link>http://loner233.github.io/post/keras%E4%BD%BF%E7%94%A8tensorboard/</link>
      <pubDate>Sun, 11 Oct 2020 15:44:57 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/keras%E4%BD%BF%E7%94%A8tensorboard/</guid>
      <description>&lt;p&gt;使用TensorBoard来记录Tensorflow训练时的情况&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tensorflow几个交叉熵</title>
      <link>http://loner233.github.io/post/tensorflow%E5%87%A0%E4%B8%AA%E4%BA%A4%E5%8F%89%E7%86%B5/</link>
      <pubDate>Sun, 11 Oct 2020 15:43:22 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/tensorflow%E5%87%A0%E4%B8%AA%E4%BA%A4%E5%8F%89%E7%86%B5/</guid>
      <description>&lt;p&gt;Tensorflow中提供了几个交叉熵的实现,分别是&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sigmoid_cross_entropy_with_logits&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sparse_softmax_cross_entropy_with_logits&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weighted_cross_entropy_with_logits&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;softmax_cross_entropy_with_logits&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>使用Eager模式训练线性回归</title>
      <link>http://loner233.github.io/post/%E4%BD%BF%E7%94%A8eager%E6%A8%A1%E5%BC%8F%E8%AE%AD%E7%BB%83%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/</link>
      <pubDate>Sun, 11 Oct 2020 15:41:44 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/%E4%BD%BF%E7%94%A8eager%E6%A8%A1%E5%BC%8F%E8%AE%AD%E7%BB%83%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/</guid>
      <description>&lt;p&gt;所谓&lt;strong&gt;Eager模式&lt;/strong&gt;就是可以立即执行tensorflow代码，从这个特点也可以看出，向来不支持动态图的tensorflow也终于支持动态图了，据说调试tf代码也可以用原生的python调试器了。
以下用tensorflow的eager模式来写了一个线性回归的Demo&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
