<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>深度学习 on Castle of Glass</title>
    <link>http://loner233.github.io/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/</link>
    <description>Recent content in 深度学习 on Castle of Glass</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 11 Oct 2020 11:32:40 +0800</lastBuildDate><atom:link href="http://loner233.github.io/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>图像分割的损失函数</title>
      <link>http://loner233.github.io/post/%E5%9B%BE%E5%83%8F%E5%88%86%E5%89%B2%E7%9A%84%E6%8D%9F%E5%A4%B1%E5%87%BD%E6%95%B0/</link>
      <pubDate>Sun, 11 Oct 2020 11:32:40 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/%E5%9B%BE%E5%83%8F%E5%88%86%E5%89%B2%E7%9A%84%E6%8D%9F%E5%A4%B1%E5%87%BD%E6%95%B0/</guid>
      <description>&lt;h1 id=&#34;cross-entropy交叉熵&#34;&gt;Cross Entropy(交叉熵)&lt;/h1&gt;
&lt;p&gt;假设真实概率:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$P(Y = 0) = p$&lt;/li&gt;
&lt;li&gt;$P(Y = 1) = 1 - p$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;预测概率为:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$P(\hat{Y} = 0) = \frac{1}{1 + e^{-x}} = \hat{p}$&lt;/li&gt;
&lt;li&gt;$P(\hat{Y} = 1) = 1 - \frac{1}{1 + e^{-x}} = 1 - \hat{p}$&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Softmax的溢出问题</title>
      <link>http://loner233.github.io/post/softmax%E7%9A%84%E6%BA%A2%E5%87%BA%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sun, 11 Oct 2020 10:39:48 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/softmax%E7%9A%84%E6%BA%A2%E5%87%BA%E9%97%AE%E9%A2%98/</guid>
      <description>在上次实现softmax regression的时候就遇到了softmax溢出，导致了nan的问题，当时做了点优化，但是还是有一定的几率出现溢</description>
    </item>
    
    <item>
      <title>LSTM</title>
      <link>http://loner233.github.io/post/lstm/</link>
      <pubDate>Wed, 16 Sep 2020 22:33:45 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/lstm/</guid>
      <description>传统的RNN 其中： $x$表示当前状态的数据输入 $h$表示接受到的上一个节点的输入 $y$表示当前节点下的输出 $h^{&#39;}$ 表示传递到下一个节点的输出 Long Short Term</description>
    </item>
    
    <item>
      <title>Gaussian Error Linear Unit(A.K.A gelu)</title>
      <link>http://loner233.github.io/post/gaussian-error-linear-unita.k.a-gelu/</link>
      <pubDate>Thu, 19 Sep 2019 09:10:00 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/gaussian-error-linear-unita.k.a-gelu/</guid>
      <description>正态分布 得从正态分布$X ～ N(\mu,\sigma^2)$开始说起,其密度函数为:$$f(x) = \frac{1}{\sigma\sqrt[]{2\pi}}e^{-\frac{(x-\mu)^2}{2\sigma^2}}$$ 此时,当$(\mu=0,\sigma=1)</description>
    </item>
    
  </channel>
</rss>
