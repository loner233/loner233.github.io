<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Castle of Glass</title>
    <link>http://loner233.github.io/</link>
    <description>Recent content on Castle of Glass</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 11 Oct 2020 20:46:41 +0800</lastBuildDate><atom:link href="http://loner233.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About</title>
      <link>http://loner233.github.io/about/</link>
      <pubDate>Sun, 20 Aug 2017 21:38:52 +0800</pubDate>
      
      <guid>http://loner233.github.io/about/</guid>
      <description>Hugo is a static site engine written in Go.
It makes use of a variety of open source projects including:
 Cobra Viper J Walter Weatherman Cast  Learn more and contribute on GitHub.</description>
    </item>
    
    <item>
      <title>使用Matplotlib画实时更新的图</title>
      <link>http://loner233.github.io/post/%E4%BD%BF%E7%94%A8matplotlib%E7%94%BB%E5%AE%9E%E6%97%B6%E6%9B%B4%E6%96%B0%E7%9A%84%E5%9B%BE/</link>
      <pubDate>Sun, 11 Oct 2020 20:46:41 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/%E4%BD%BF%E7%94%A8matplotlib%E7%94%BB%E5%AE%9E%E6%97%B6%E6%9B%B4%E6%96%B0%E7%9A%84%E5%9B%BE/</guid>
      <description>&lt;p&gt;matplotlib画实时更新的图&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Celery</title>
      <link>http://loner233.github.io/post/celery/</link>
      <pubDate>Sun, 11 Oct 2020 20:41:18 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/celery/</guid>
      <description>&lt;p&gt;Celery 是 Python 语言实现的分布式队列服务，除了支持即时任务，还支持定时任务，Celery 有5个核心角色。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>H5py</title>
      <link>http://loner233.github.io/post/h5py/</link>
      <pubDate>Sun, 11 Oct 2020 20:31:57 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/h5py/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;HDF（Hierarchical Data Format）指一种为存储和处理大容量科学数据设计的文件格式及相应库文件。HDF 最早由美国国家超级计算应用中心 NCSA 开发，目前在非盈利组织 HDF 小组维护下继续发展。当前流行的版本是 HDF5。HDF5 拥有一系列的优异特性，使其特别适合进行大量科学数据的存储和操作，如它支持非常多的数据类型，灵活，通用，跨平台，可扩展，高效的 I/O 性能，支持几乎无限量（高达 EB）的单文件存储等，&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Python中的imageio</title>
      <link>http://loner233.github.io/post/python%E4%B8%AD%E7%9A%84imageio/</link>
      <pubDate>Sun, 11 Oct 2020 20:25:03 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/python%E4%B8%AD%E7%9A%84imageio/</guid>
      <description>imageio的操作 ps:公司的电脑是windows的，正斜杠和反斜杠实在蛋疼，上次hadoop在windows上运行的权限问题已经使我非常</description>
    </item>
    
    <item>
      <title>Python没有真正的多线程</title>
      <link>http://loner233.github.io/post/python%E6%B2%A1%E6%9C%89%E7%9C%9F%E6%AD%A3%E7%9A%84%E5%A4%9A%E7%BA%BF%E7%A8%8B/</link>
      <pubDate>Sun, 11 Oct 2020 20:23:29 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/python%E6%B2%A1%E6%9C%89%E7%9C%9F%E6%AD%A3%E7%9A%84%E5%A4%9A%E7%BA%BF%E7%A8%8B/</guid>
      <description>&lt;p&gt;为什么说Python没有真正的多线程呢&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python中指定变量类型</title>
      <link>http://loner233.github.io/post/python%E4%B8%AD%E6%8C%87%E5%AE%9A%E5%8F%98%E9%87%8F%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Sun, 11 Oct 2020 20:21:37 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/python%E4%B8%AD%E6%8C%87%E5%AE%9A%E5%8F%98%E9%87%8F%E7%B1%BB%E5%9E%8B/</guid>
      <description>&lt;p&gt;这是一个淡忘的知识，由于动态语言的特性，好久都没指定过python变量的类型&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Numpy中一些神奇的点</title>
      <link>http://loner233.github.io/post/numpy%E4%B8%AD%E4%B8%80%E4%BA%9B%E7%A5%9E%E5%A5%87%E7%9A%84%E7%82%B9/</link>
      <pubDate>Sun, 11 Oct 2020 20:19:43 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/numpy%E4%B8%AD%E4%B8%80%E4%BA%9B%E7%A5%9E%E5%A5%87%E7%9A%84%E7%82%B9/</guid>
      <description>&lt;p&gt;只是用来记录一些比较容易被忽略但是又有点实用的点&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Numpy中的clip</title>
      <link>http://loner233.github.io/post/numpy%E4%B8%AD%E7%9A%84clip/</link>
      <pubDate>Sun, 11 Oct 2020 20:14:53 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/numpy%E4%B8%AD%E7%9A%84clip/</guid>
      <description>&lt;p&gt;numpy.clip(a, a_min, a_max, out=None)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tqdm模块</title>
      <link>http://loner233.github.io/post/tqdm%E6%A8%A1%E5%9D%97/</link>
      <pubDate>Sun, 11 Oct 2020 20:12:15 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/tqdm%E6%A8%A1%E5%9D%97/</guid>
      <description>&lt;p&gt;&lt;code&gt;tqdm&lt;/code&gt;有三种主要的方法&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python中整数引发的问题</title>
      <link>http://loner233.github.io/post/python%E4%B8%AD%E6%95%B4%E6%95%B0%E5%BC%95%E5%8F%91%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sun, 11 Oct 2020 20:07:06 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/python%E4%B8%AD%E6%95%B4%E6%95%B0%E5%BC%95%E5%8F%91%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>&lt;p&gt;在Python中一切都是对象，整数也是对象，在比较两个整数是有两个运算符&lt;code&gt;==&lt;/code&gt;和&lt;code&gt;is&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python中对源码的加密与混淆</title>
      <link>http://loner233.github.io/post/python%E4%B8%AD%E5%AF%B9%E6%BA%90%E7%A0%81%E7%9A%84%E5%8A%A0%E5%AF%86%E4%B8%8E%E6%B7%B7%E6%B7%86/</link>
      <pubDate>Sun, 11 Oct 2020 20:04:21 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/python%E4%B8%AD%E5%AF%B9%E6%BA%90%E7%A0%81%E7%9A%84%E5%8A%A0%E5%AF%86%E4%B8%8E%E6%B7%B7%E6%B7%86/</guid>
      <description>&lt;p&gt;在python商业化开发中，全盘给出源码是一件非常不靠铺的事情，所以有时候就要对代码进行加密和混淆。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python中的抽象类(abc模块)</title>
      <link>http://loner233.github.io/post/python%E4%B8%AD%E7%9A%84%E6%8A%BD%E8%B1%A1%E7%B1%BBabc%E6%A8%A1%E5%9D%97/</link>
      <pubDate>Sun, 11 Oct 2020 20:01:10 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/python%E4%B8%AD%E7%9A%84%E6%8A%BD%E8%B1%A1%E7%B1%BBabc%E6%A8%A1%E5%9D%97/</guid>
      <description>&lt;p&gt;通过abc模块可以使得Python的基类能达到接口的效果&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Numpy中的newaxis</title>
      <link>http://loner233.github.io/post/numpy%E4%B8%AD%E7%9A%84newaxis/</link>
      <pubDate>Sun, 11 Oct 2020 19:57:53 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/numpy%E4%B8%AD%E7%9A%84newaxis/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Python上下文管理器</title>
      <link>http://loner233.github.io/post/python%E4%B8%8A%E4%B8%8B%E6%96%87%E7%AE%A1%E7%90%86%E5%99%A8/</link>
      <pubDate>Sun, 11 Oct 2020 19:55:23 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/python%E4%B8%8A%E4%B8%8B%E6%96%87%E7%AE%A1%E7%90%86%E5%99%A8/</guid>
      <description>&lt;p&gt;&lt;code&gt;with&lt;/code&gt;是最广泛使用的上下文管理器。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;test/test.txt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;w&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;hello&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Python重载运算符</title>
      <link>http://loner233.github.io/post/python%E9%87%8D%E8%BD%BD%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
      <pubDate>Sun, 11 Oct 2020 19:49:07 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/python%E9%87%8D%E8%BD%BD%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;不能重载内置类型的运算符&lt;/li&gt;
&lt;li&gt;不能新建运算符，只能重载现有运算符&lt;/li&gt;
&lt;li&gt;某些运算符不能重载——&lt;code&gt;is&lt;/code&gt;、&lt;code&gt;and&lt;/code&gt;、&lt;code&gt;or&lt;/code&gt; 和 &lt;code&gt;not&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Numpy中的outer的应用</title>
      <link>http://loner233.github.io/post/numpy%E4%B8%AD%E7%9A%84outer%E7%9A%84%E5%BA%94%E7%94%A8/</link>
      <pubDate>Sun, 11 Oct 2020 19:45:01 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/numpy%E4%B8%AD%E7%9A%84outer%E7%9A%84%E5%BA%94%E7%94%A8/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;对于多维向量，全部展开为一维向量&lt;/li&gt;
&lt;li&gt;第一个参数表示倍数，使得第二个向量每次变为几倍&lt;/li&gt;
&lt;li&gt;地一个参数确定结果的行，第二个参数确定结果的列&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>tf（旧）中的变量管理</title>
      <link>http://loner233.github.io/post/tf%E6%97%A7%E4%B8%AD%E7%9A%84%E5%8F%98%E9%87%8F%E7%AE%A1%E7%90%86/</link>
      <pubDate>Sun, 11 Oct 2020 16:34:36 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/tf%E6%97%A7%E4%B8%AD%E7%9A%84%E5%8F%98%E9%87%8F%E7%AE%A1%E7%90%86/</guid>
      <description>&lt;p&gt;长时间没用Tensorflow，最近使用时对里面的变量作用域感觉一脸蒙蔽，特此来复习一下。主要就是&lt;code&gt;tf.variable_scope()&lt;/code&gt;
变量作用域的两个核心方法:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tf中的GradientTape</title>
      <link>http://loner233.github.io/post/tf%E4%B8%AD%E7%9A%84gradienttape/</link>
      <pubDate>Sun, 11 Oct 2020 16:29:24 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/tf%E4%B8%AD%E7%9A%84gradienttape/</guid>
      <description>&lt;p&gt;OP如果在上下文管理器中被执行的话，它就会被记录下来，至少输入inputs中的一个会被监听（watched）&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tf中的low Level Api</title>
      <link>http://loner233.github.io/post/tf%E4%B8%AD%E7%9A%84low-level-api/</link>
      <pubDate>Sun, 11 Oct 2020 16:21:02 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/tf%E4%B8%AD%E7%9A%84low-level-api/</guid>
      <description>&lt;p&gt;最近用了几次tensorflow的高阶api，发现构建自己的算法的时候还是有很大的局限性，再用回低阶api的时候发现自己蠢哭了，竟然不会写了，乘此机会复习复习，顺便看看新的特性。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tf.keras中Custom层</title>
      <link>http://loner233.github.io/post/tf.keras%E4%B8%ADcustom%E5%B1%82/</link>
      <pubDate>Sun, 11 Oct 2020 16:17:20 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/tf.keras%E4%B8%ADcustom%E5%B1%82/</guid>
      <description>&lt;p&gt;正常情况下使用tf的层&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;tensorflow&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;tf&lt;/span&gt;                                                             
&lt;span class=&#34;n&#34;&gt;tf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;keras&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;layers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Dense&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;input_shape&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;                                      
&lt;span class=&#34;n&#34;&gt;layer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;zeros&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]))&lt;/span&gt;                                                             
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>tf中的Dataset</title>
      <link>http://loner233.github.io/post/tf%E4%B8%AD%E7%9A%84dataset/</link>
      <pubDate>Sun, 11 Oct 2020 16:04:54 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/tf%E4%B8%AD%E7%9A%84dataset/</guid>
      <description>&lt;p&gt;Dataset api是TensorFlow 1.3引入的一个新的模块，主要用于数据的读取，构建输入数据的pipline&lt;br&gt;
此前，只能通过两种方法读取数据&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用Placeholder读内存中的数据&lt;/li&gt;
&lt;li&gt;使用queue读硬盘中的数据&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>tf中的Example和TFRecord</title>
      <link>http://loner233.github.io/post/tf%E4%B8%AD%E7%9A%84example%E5%92%8Ctfrecord/</link>
      <pubDate>Sun, 11 Oct 2020 15:54:24 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/tf%E4%B8%AD%E7%9A%84example%E5%92%8Ctfrecord/</guid>
      <description>&lt;h2 id=&#34;tfexample&#34;&gt;&lt;code&gt;tf.Example&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;实际上&lt;code&gt;tf.Example&lt;/code&gt;就是一个&lt;code&gt;{&amp;quot;string&amp;quot;:tf.train.Feature}&lt;/code&gt;的映射&lt;br&gt;
&lt;code&gt;tf.train.Feature&lt;/code&gt;消息类型可以接受以下三种类型中的一中&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tf.py_function</title>
      <link>http://loner233.github.io/post/tf.py_function/</link>
      <pubDate>Sun, 11 Oct 2020 15:51:50 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/tf.py_function/</guid>
      <description>&lt;p&gt;这个方法允许用python方法来在TensorFlow图中表示计算，即：&lt;br&gt;
&lt;strong&gt;将python方法转换成tensorflow的op&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Keras保存模型</title>
      <link>http://loner233.github.io/post/keras%E4%BF%9D%E5%AD%98%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Sun, 11 Oct 2020 15:50:27 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/keras%E4%BF%9D%E5%AD%98%E6%A8%A1%E5%9E%8B/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Batch Normalization</title>
      <link>http://loner233.github.io/post/batch-normalization/</link>
      <pubDate>Sun, 11 Oct 2020 15:48:08 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/batch-normalization/</guid>
      <description>&lt;p&gt;不涉及到基本原理,基本原理OneNote笔记，正在整理上传中&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Keras使用tensorboard</title>
      <link>http://loner233.github.io/post/keras%E4%BD%BF%E7%94%A8tensorboard/</link>
      <pubDate>Sun, 11 Oct 2020 15:44:57 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/keras%E4%BD%BF%E7%94%A8tensorboard/</guid>
      <description>&lt;p&gt;使用TensorBoard来记录Tensorflow训练时的情况&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tensorflow几个交叉熵</title>
      <link>http://loner233.github.io/post/tensorflow%E5%87%A0%E4%B8%AA%E4%BA%A4%E5%8F%89%E7%86%B5/</link>
      <pubDate>Sun, 11 Oct 2020 15:43:22 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/tensorflow%E5%87%A0%E4%B8%AA%E4%BA%A4%E5%8F%89%E7%86%B5/</guid>
      <description>&lt;p&gt;Tensorflow中提供了几个交叉熵的实现,分别是&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sigmoid_cross_entropy_with_logits&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sparse_softmax_cross_entropy_with_logits&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weighted_cross_entropy_with_logits&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;softmax_cross_entropy_with_logits&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>使用Eager模式训练线性回归</title>
      <link>http://loner233.github.io/post/%E4%BD%BF%E7%94%A8eager%E6%A8%A1%E5%BC%8F%E8%AE%AD%E7%BB%83%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/</link>
      <pubDate>Sun, 11 Oct 2020 15:41:44 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/%E4%BD%BF%E7%94%A8eager%E6%A8%A1%E5%BC%8F%E8%AE%AD%E7%BB%83%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/</guid>
      <description>&lt;p&gt;所谓&lt;strong&gt;Eager模式&lt;/strong&gt;就是可以立即执行tensorflow代码，从这个特点也可以看出，向来不支持动态图的tensorflow也终于支持动态图了，据说调试tf代码也可以用原生的python调试器了。
以下用tensorflow的eager模式来写了一个线性回归的Demo&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MCMC(马尔科夫-蒙特卡洛)#0</title>
      <link>http://loner233.github.io/post/mcmc-part0/</link>
      <pubDate>Sun, 11 Oct 2020 15:11:08 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/mcmc-part0/</guid>
      <description>&lt;p&gt;假设观测数据由随机变量$y \in Y$表示,模型由随机变量$x \in X$表示.
贝叶斯学习通过贝叶斯定理计算给定数据条件下模型的后验概率,并选择后验概率最大的模型.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MCMC(马尔科夫-蒙特卡洛)#1</title>
      <link>http://loner233.github.io/post/mcmc-part1/</link>
      <pubDate>Sun, 11 Oct 2020 15:11:08 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/mcmc-part1/</guid>
      <description>&lt;p&gt;很多人都会用圆周率的例子来解释蒙特卡罗方法，这个真的没什么用，没人能够从这个例子里面理解什么是MCMC，接下来开个坑，花几天搞完这儿个东西。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MCMC(马尔科夫-蒙特卡洛)#2</title>
      <link>http://loner233.github.io/post/mcmc-part2/</link>
      <pubDate>Sun, 11 Oct 2020 15:11:08 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/mcmc-part2/</guid>
      <description>&lt;p&gt;马尔科夫链的定义比较简单,它假设某一时刻状态转移的概率只依赖于它的前一个状态.
假设状态序列是$&amp;hellip;,X_{t-2},X_{t-1},X_{t},X_{t+1},&amp;hellip;$那么我们在$X_{t+1}$的状态条件概率仅仅依赖于$X_t$时刻,即:
$$P(X_{t+1}|&amp;hellip;X_{t-2},X_{t-1},X_{t}) = P(X_{t+1}|X_{t})$$&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MCMC(马尔科夫-蒙特卡洛)#3</title>
      <link>http://loner233.github.io/post/mcmc-part3/</link>
      <pubDate>Sun, 11 Oct 2020 15:11:08 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/mcmc-part3/</guid>
      <description>&lt;h2 id=&#34;细致平稳条件&#34;&gt;细致平稳条件&lt;/h2&gt;
&lt;p&gt;如果非周期马尔科夫链的状态转移矩阵$P$和概率分布$\pi(x)$对于所有的$i,j$满足:
$$\pi(i)P(i,j) = \pi(j)P(j,i)$$
则称概率分布$\pi(x)$是状态转移矩阵$P$的平稳分布&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MCMC(马尔科夫-蒙特卡洛)#4</title>
      <link>http://loner233.github.io/post/mcmc-part4/</link>
      <pubDate>Sun, 11 Oct 2020 15:11:08 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/mcmc-part4/</guid>
      <description>&lt;h2 id=&#34;gibbs采样&#34;&gt;Gibbs采样&lt;/h2&gt;
&lt;h3 id=&#34;细致平稳条件&#34;&gt;细致平稳条件&lt;/h3&gt;
&lt;p&gt;回到细致平稳条件,如果不采用MCMC的方法(加上一个建议分布), 想要满足下式
$$\pi(i)P(i,j) = \pi(j)P(j,i)$$
以二维数据分布开始,假设$\pi(x_1,x_2)$是一个二维联合数据分布.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>极大似然估计</title>
      <link>http://loner233.github.io/post/%E6%9E%81%E5%A4%A7%E4%BC%BC%E7%84%B6%E4%BC%B0%E8%AE%A1/</link>
      <pubDate>Sun, 11 Oct 2020 14:38:09 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/%E6%9E%81%E5%A4%A7%E4%BC%BC%E7%84%B6%E4%BC%B0%E8%AE%A1/</guid>
      <description>&lt;h2 id=&#34;似然函数&#34;&gt;似然函数&lt;/h2&gt;
&lt;p&gt;似然和概率有非常大的相似点，但是有一个最为关键的不同点。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;似然是已知观测结果，来估计参数;而概率是已知参数，来估计观测&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>EM算法</title>
      <link>http://loner233.github.io/post/em%E7%AE%97%E6%B3%95/</link>
      <pubDate>Sun, 11 Oct 2020 14:29:34 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/em%E7%AE%97%E6%B3%95/</guid>
      <description>&lt;p&gt;三枚硬币A，B，C,正面出现的概率分别是$\pi,p,q$,  &lt;strong&gt;先抛A，A正抛B，A反抛C，观测抛B\C的结果&lt;/strong&gt;重复n次，获得一个序列&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>重新理解贝叶斯公式</title>
      <link>http://loner233.github.io/post/%E9%87%8D%E6%96%B0%E7%90%86%E8%A7%A3%E8%B4%9D%E5%8F%B6%E6%96%AF%E5%85%AC%E5%BC%8F/</link>
      <pubDate>Sun, 11 Oct 2020 11:37:21 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/%E9%87%8D%E6%96%B0%E7%90%86%E8%A7%A3%E8%B4%9D%E5%8F%B6%E6%96%AF%E5%85%AC%E5%BC%8F/</guid>
      <description>&lt;p&gt;$$P(A|B)=\frac{P(B|A)}{P(B)}*P(A)$$&lt;/p&gt;
&lt;p&gt;以前一直理解贝叶斯公式为概率转换的，也就是先验，后验转换。现在看到了一种更好的解释&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>图像分割的损失函数</title>
      <link>http://loner233.github.io/post/%E5%9B%BE%E5%83%8F%E5%88%86%E5%89%B2%E7%9A%84%E6%8D%9F%E5%A4%B1%E5%87%BD%E6%95%B0/</link>
      <pubDate>Sun, 11 Oct 2020 11:32:40 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/%E5%9B%BE%E5%83%8F%E5%88%86%E5%89%B2%E7%9A%84%E6%8D%9F%E5%A4%B1%E5%87%BD%E6%95%B0/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Softmax的溢出问题</title>
      <link>http://loner233.github.io/post/softmax%E7%9A%84%E6%BA%A2%E5%87%BA%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sun, 11 Oct 2020 10:39:48 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/softmax%E7%9A%84%E6%BA%A2%E5%87%BA%E9%97%AE%E9%A2%98/</guid>
      <description>在上次实现softmax regression的时候就遇到了softmax溢出，导致了nan的问题，当时做了点优化，但是还是有一定的几率出现溢</description>
    </item>
    
    <item>
      <title>LSTM</title>
      <link>http://loner233.github.io/post/lstm/</link>
      <pubDate>Wed, 16 Sep 2020 22:33:45 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/lstm/</guid>
      <description>传统的RNN 其中： $x$表示当前状态的数据输入 $h$表示接受到的上一个节点的输入 $y$表示当前节点下的输出 $h^{&#39;}$ 表示传递到下一个节点的输出 Long Short Term</description>
    </item>
    
    <item>
      <title>满条件分布</title>
      <link>http://loner233.github.io/post/%E6%BB%A1%E6%9D%A1%E4%BB%B6%E5%88%86%E5%B8%83/</link>
      <pubDate>Thu, 19 Sep 2019 09:24:10 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/%E6%BB%A1%E6%9D%A1%E4%BB%B6%E5%88%86%E5%B8%83/</guid>
      <description>&lt;h3 id=&#34;mcmc方法的目标分布&#34;&gt;MCMC方法的目标分布&lt;/h3&gt;
&lt;p&gt;通常是多元联合概率分布$p(x) = p(x_1,x_2,&amp;hellip;,x_k)$,其中$x = (x_1,x_2,&amp;hellip;,x_k)^T$为$k$维随机变量&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Gaussian Error Linear Unit(A.K.A gelu)</title>
      <link>http://loner233.github.io/post/gaussian-error-linear-unita.k.a-gelu/</link>
      <pubDate>Thu, 19 Sep 2019 09:10:00 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/gaussian-error-linear-unita.k.a-gelu/</guid>
      <description>&lt;h2 id=&#34;正态分布&#34;&gt;正态分布&lt;/h2&gt;
&lt;p&gt;得从正态分布$X ～ N(\mu,\sigma^2)$开始说起,其密度函数为:$$f(x) = \frac{1}{\sigma\sqrt[]{2\pi}}e^{-\frac{(x-\mu)^2}{2\sigma^2}}$$&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Shortcodes</title>
      <link>http://loner233.github.io/post/shortcodes/</link>
      <pubDate>Tue, 30 Aug 2016 16:01:23 +0800</pubDate>
      
      <guid>http://loner233.github.io/post/shortcodes/</guid>
      <description>&lt;h1 id=&#34;admonition&#34;&gt;Admonition&lt;/h1&gt;
&lt;div class=&#34;admonition note&#34;&gt;&lt;p class=&#34;admonition-title&#34;&gt;I&amp;#39;m title!&lt;/p&gt;
&lt;p&gt;biu biu biu.&lt;/p&gt;
&lt;details class=&#34;admonition note&#34;&gt;&lt;summary class=&#34;admonition-title&#34;&gt;note&lt;/summary&gt;
  &lt;p&gt;biu biu biu.&lt;/p&gt;
&lt;/details&gt;
&lt;div class=&#34;admonition example&#34;&gt;
  &lt;p&gt;Without title.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;{{% admonition note &amp;#34;I&amp;#39;m title!&amp;#34; false %}}
biu biu biu.

{{% admonition type=&amp;#34;note&amp;#34; title=&amp;#34;note&amp;#34; details=&amp;#34;true&amp;#34; %}}
biu biu biu.
{{% /admonition %}}

{{% admonition example %}}
Without title.
{{% /admonition %}}

{{% /admonition %}}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>
